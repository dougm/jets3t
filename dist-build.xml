<?xml version="1.0"?>
<!-- ====================================================================== 
     JetS3t    
     Toolkit and application suite for Amazon's S3 online storage service.
                   
     James Murty                                                                
     ====================================================================== -->
<project name="JetS3t" default="dist">
    <description>
    		JetS3t : Toolkit and application suite for Amazon's S3 online storage service
    </description>
	
	<property file="build.properties"/>

	<!-- ================================= 
         Define the script-wide classpath.
         ================================= -->
	<path id="classpath">
		<fileset dir="${dir.libs}" includes="**/*.jar"/>
	</path>
	
	
    <target name="dist" 
    	depends="dist-service,dist-app-cockpit,dist-app-cockpitlite,dist-app-synchronize,dist-app-uploader,dist-servlet-gatekeeper"/>
	
	<target name="compile">
		<mkdir dir="${dir.build}"/>
		<javac 
			srcdir="${dir.src}"
			destdir="${dir.build}"
			debug="${debug}"
			source="1.4"
			target="${build.target}"
		>
			<classpath refid="classpath"/>
		</javac>
	</target>
		
	<target name="dist-service" depends="compile">
		<jar
			basedir="${dir.build}"			
			file="jars/${dist.file.service}"
            index="true"
			>
			<include name="org/jets3t/service/**"/>
			<include name="org/apache/commons/httpclient/contrib/**"/>
		</jar>
        <jar
            basedir="${dir.build}"
            file="jars/${dist.file.guisupport}"
            index="true"
            >
            <include name="org/jets3t/gui/**"/>
            <include name="org/jets3t/gui/skins/**"/>
        </jar>
	</target>

    <target name="dist-app-cockpit" depends="dist-service">
		<jar
			basedir="${dir.build}"			
			file="jars/${dist.file.cockpit}"
            index="true"
			>
			<include name="org/jets3t/apps/cockpit/**"/>
            <manifest>
                <attribute name="Main-Class" value="org.jets3t.apps.cockpit.Cockpit"/>
            </manifest>
		</jar>
	</target>
	
    <target name="dist-app-cockpitlite" depends="dist-service">
        <jar
            basedir="${dir.build}"
            file="jars/${dist.file.cockpitlite}"
            index="true"
            >
            <include name="org/jets3t/apps/cockpitlite/**"/>
            <manifest>
                <attribute name="Main-Class" value="org.jets3t.apps.cockpitlite.CockpitLite"/>
            </manifest>
        </jar>
    </target>

    <target name="dist-app-synchronize" depends="dist-service">
		<jar
			basedir="${dir.build}"			
			file="jars/${dist.file.synchronize}"
            index="true"
			>
			<include name="org/jets3t/apps/synchronize/**"/>
            <manifest>
                <attribute name="Main-Class" value="org.jets3t.apps.synchronize.Synchronize"/>
            </manifest>
		</jar>
	</target>
	
    <target name="dist-app-uploader" depends="dist-service">
		<jar
			basedir="${dir.build}"			
			file="jars/${dist.file.uploader}"
            index="true"
			>
			<include name="org/jets3t/apps/uploader/**"/>
            <manifest>
                <attribute name="Main-Class" value="org.jets3t.apps.uploader.Uploader"/>
            </manifest>
		</jar>
	</target>
	
	<target name="dist-servlet-gatekeeper" depends="dist-service">
		<war 
			destfile="servlets/gatekeeper/${dist.file.gatekeeper}"
			webxml="${dir.servlets}/gatekeeper-web.xml"
			>
			
			<lib dir="jars" includes="${dist.file.service}"/>
			<lib dir="${dir.libs}/commons-httpclient" includes="*.jar"/>
			<lib dir="${dir.libs}/commons-logging" includes="*.jar"/>
			<lib dir="${dir.libs}/commons-codec" includes="*.jar"/>
			<lib dir="${dir.libs}/logging-log4j" includes="*.jar"/>
			<lib dir="${dir.libs}/safehaus_jug" includes="*.jar"/>
			
			<classes dir="${dir.configs}">
                <include name="commons-logging.properties"/>
                <include name="log4j.properties"/>
                <include name="simplelog.properties"/>
			</classes>			
			<classes dir="${dir.build}">
				<include name="org/jets3t/servlets/gatekeeper/**"/>
			</classes>
		</war>
	</target>

    <target name="repackage-applets" depends="repackage-applet-cockpit,repackage-applet-cockpitlite,repackage-applet-uploader">
	</target>
		
    <target name="sign-jars" depends="dist">
		<mkdir dir="${dir.applets}"/>
		
        <!-- Copy jars required by all applets -->
		<copy 			
			todir="${dir.applets}"
			flatten="true"
			>
			<fileset dir="jars">
				<include name="**/${dist.file.service}"/>
				<include name="**/${dist.file.guisupport}"/>
			</fileset>
		</copy>
		<copy 			
			todir="${dir.applets}"
			flatten="true"
			>
			<fileset dir="${dir.libs}">
				<include name="**/commons-logging/*.jar"/>
				<include name="**/commons-codec/*.jar"/>
				<include name="**/commons-httpclient/*.jar"/>
                <include name="**/logging-log4j/*.jar"/>
			</fileset>
		</copy>

		<!-- Sign jars -->		
		<signjar 
			alias="${keystore.alias}"
			keystore="${keystore.file}"
			storepass="${keystore.storepass}"
            keypass="${keystore.keypass}"
            lazy="true"
            >
            <fileset dir="${dir.applets}">
                <include name="${dist.file.service}"/>
                <include name="commons-codec-1.3.jar"/>
                <include name="commons-httpclient-3.0.1.jar"/>
                <include name="commons-logging-1.1.jar"/>
                <include name="log4j-1.2.14.jar"/>
            </fileset>
		</signjar>
    </target>
		
    <target name="repackage-applet-cockpit" depends="sign-jars">

        <!-- Copy jars required by Cockpit applet -->
        <copy
            todir="${dir.applets}"
            flatten="true"
            >
            <fileset dir="jars">
                <include name="**/${dist.file.cockpit}"/>
            </fileset>
        </copy>

		<!-- Copy relevant configuration files -->
		<copy todir="${dir.applets}">
			<fileset dir="${dir.configs}">
				<include name="jets3t.properties"/>
				<include name="mime.types"/>
			</fileset>
		</copy>
		<copy todir="${dir.applets}">
			<fileset dir="${dir.applet}">
				<include name="commons-logging.properties"/>
				<include name="simplelog.properties"/>
			</fileset>
		</copy>

		<!-- Copy applet running HTML files -->
		<copy todir="${dir.applets}">
            <fileset dir="${dir.applet}">
                <exclude name="*cockpit*lite*"/>
                <include name="*cockpit*"/>
            </fileset>
		</copy>
    	
		<!-- Copy resources -->
		<copy todir="${dir.applets}">
			<fileset dir="${dir.resources}" includes="**"/>
		</copy>
		
        <!-- Sign jars -->
        <signjar
            alias="${keystore.alias}"
            keystore="${keystore.file}"
            storepass="${keystore.storepass}"
            keypass="${keystore.keypass}"
            lazy="true"
            >
            <fileset dir="${dir.applets}">
                <include name="${dist.file.cockpit}"/>
            </fileset>
        </signjar>
	</target>
		
    <target name="repackage-applet-cockpitlite" depends="sign-jars">
		
        <!-- Copy jars required by CockpitLite applet -->
		<copy 			
			todir="${dir.applets}"
			flatten="true"
			>
			<fileset dir="jars">
                <include name="**/${dist.file.cockpitlite}"/>
                <include name="**/${dist.file.guisupport}"/>
			</fileset>
		</copy>

        <!-- Copy relevant configuration files -->
        <copy todir="${dir.applets}">
            <fileset dir="${dir.configs}">
                <include name="jets3t.properties"/>
                <include name="mime.types"/>
                <include name="cockpit-lite.properties"/>
			</fileset>
		</copy>
        <copy todir="${dir.applets}">
            <fileset dir="${dir.applet}">
                <include name="commons-logging.properties"/>
                <include name="simplelog.properties"/>
            </fileset>
        </copy>

        <!-- Copy applet running HTML files -->
        <copy todir="${dir.applets}">
            <fileset dir="${dir.applet}">
                <include name="*cockpit*lite*"/>
            </fileset>
        </copy>
    	
		<!-- Copy resources -->
		<copy todir="${dir.applets}">
			<fileset dir="${dir.resources}" includes="**"/>
		</copy>

		<!-- Sign jars -->		
		<signjar 
			alias="${keystore.alias}"
			keystore="${keystore.file}"
			storepass="${keystore.storepass}"
            keypass="${keystore.keypass}"
            lazy="true"
            >
            <fileset dir="${dir.applets}">
                <include name="${dist.file.cockpitlite}"/>
            </fileset>
		</signjar>
    </target>
		
    <target name="repackage-applet-uploader" depends="sign-jars">

        <!-- Copy jars required by Uploader applet -->
        <copy
            todir="${dir.applets}"
            flatten="true"
            >
            <fileset dir="jars">
                <include name="**/${dist.file.uploader}"/>
            </fileset>
        </copy>

		<!-- Copy relevant configuration files -->
		<copy todir="${dir.applets}">
			<fileset dir="${dir.configs}">
				<include name="jets3t.properties"/>
				<include name="mime.types"/>
                <include name="uploader.properties"/>
                <include name="cockpitlite.properties"/>
			</fileset>
		</copy>
		<copy todir="${dir.applets}">
			<fileset dir="${dir.applet}">
				<include name="commons-logging.properties"/>
				<include name="simplelog.properties"/>
			</fileset>
		</copy>

		<!-- Copy applet running HTML files -->
		<copy todir="${dir.applets}">
            <fileset dir="${dir.applet}">
                <include name="*uploader*"/>
            </fileset>
		</copy>
    	
		<!-- Copy resources -->
		<copy todir="${dir.applets}">
			<fileset dir="${dir.resources}" includes="**"/>
		</copy>
		
        <!-- Sign jars -->
        <signjar
            alias="${keystore.alias}"
            keystore="${keystore.file}"
            storepass="${keystore.storepass}"
            keypass="${keystore.keypass}"
            lazy="true"
            >
            <fileset dir="${dir.applets}">
                <include name="${dist.file.uploader}"/>
            </fileset>
        </signjar>
	</target>


	<target name="clean">
		<delete dir="${dir.build}"/>
		<delete dir="${dir.dist}"/>
	</target>
	
</project>

