###
# Uploader's required properties
###

## Specifies the URL of a server-side Gatekeeper service.
gatekeeperUrl=http://localhost:8080/gatekeeper-0.6.1/GatekeeperServlet

## If true, an XML summary document is stored in S3 for every upload transaction. This is not available in the demo configuration.
xmlSummary=false


###
# Applet parameters - parameter names the uploaded expects the applet tag to provide  
###
applet.params=


###
# Upload File Constraints - an error message is displayed if the files chosen for 
# upload do not meet these constraints.
###

## How many files may be uploaded at a time.
file.maxCount=1

## The minimum size of files, in megabytes
file.minSizeMB=0

## The maximum size of files, in megabytes
file.maxSizeMB=250

## If specified, files chosen for upload must have one of the listed file name extensions.  
#file.extensions=txt,html


###
# Skinning
###

# If specified, the named skin implementation/package will be used.
#skin.name=html

# HTML Skin LookAndFeel properties
skin.html.textColor=#000000
skin.html.backgroundColor=#ffffff
skin.html.font=Verdana-PLAIN-15


###
# Branding - Sets the application's title bar and footer details.
###

gui.applicationTitle=JetS3t Uploader
gui.applicationIcon=
gui.footerHtml=<html>&nbsp;<a target="_blank" href="http://jets3t.dev.java.net/index.html">JetS3t Home</a></html>
gui.footerIcon=


###
# User Input Fields
#
# Properties to define the input fields presented to the user in the first wizard step.
# Fields must be numbered from 1 to n, in the same order they will be displayed in the uploader.
#
# All fields to be displayed must have the following properties set:
#   field.<i>.name : Unique name for the field, which will be used in the XML file. 
#   field.<i>.type : GUI element to display, one of: textarea, text, password, selection, radio
#   field.<i>.prompt : The prompt text to display to the user in the GUI 
# In addition to the above properties, field items of type 'selection' and 'radio' must also have:
#   field.<i>.options : A comma-separated list of options the user can choose from.
###

#####################################
# The field names AwsAccessKey, AwsSecretKey and S3BucketName are "magic" field names
# that allow the user to specify their AWS credentials and the target S3 bucket. If these
# fields are available, the Uploader will self-sign URLs instead of requiring a server-side
# Gatekeeper service.
#
# These settings should only be used for *demo* purposes. 
field.1.name=AwsAccessKey
field.1.prompt=<html><b>Your AWS Access Key</b> <font color="red">*</font></html> 
field.1.type=text

field.2.name=AwsSecretKey
field.2.prompt=<html><b>Your AWS Secret Key</b> <font color="red">*</font></html> 
field.2.type=password

field.3.name=S3BucketName
field.3.prompt=<html><b>S3 Bucket Name</b> <font color="red">*</font><br><sub>This bucket must already exist in your S3 account</sub></html> 
field.3.type=text
#####################################

## Some example fields...

#field.4.name=FavouriteColour
#field.4.prompt=<html><b>My favourite colour is</b></html>
#field.4.type=radio
#field.4.options=Blue,Green,Red,Puce

#field.5.name=Location
#field.5.prompt=<html><b>Where are you?</b></html> 
#field.5.type=selection
#field.5.options=Earth,Elsewhere

###
# Configurable text items displayed in the GUI, separated into sections by screen.
#
# Each screen has a title, and images/text/tooltips for the back and next buttons. If no text or image is
# provided for a button, the button will not be displayed.
#
# Where a screen has additional non-standard elements, these are listed in the screen description below.
#
# The screens 'title' text item, and any additional non-standard text elements, may include variables 
# that will be replaced when the text is displayed. Replacement variables are prefixed surrounded with 
# ${} and can include anything in the Uploader's properties, parameters provided or user inputs. In
# addition, the following information is made available by the Uploader:
# File constraints:
# ${maxFileSize}, ${maxFileCount}, ${validFileExtensions}
# File(s) chosen for upload (only available after screen 2):
# ${fileNameList}, ${filesSize}
###

## Screen 1 displays user input fields, as configured with the 'field.' properties.
screen.1.title=<html><center>Step 1 of 4.<p><p>This is a demonstration version of the <b>JetS3t Uploader</b>.<p><p>Although the Uploader normally requires a <a href="http://jets3t.s3.amazonaws.com/applications/gatekeeper.html" target="_blank">Gatekeeper</a> server to provide signed URLs, this demo version allows you to try it out in stand-alone mode by using your AWS credentials.</center></html>
screen.1.nextButton.text=Next
screen.1.nextButton.tooltip=Next
screen.1.nextButton.image=/images/nuvola/32x32/actions/forward.png

## Screen 2 prompts the user to choose a file to upload, by drag-and-dropping a file into a drop zone or by selecting it with a browse button.
## Screen-specific text items: 
##   dragDropPrompt : Instructions for user to drag-drop file onto pane, or use browse button.
##   browseButton.text : Text to display in the file browse button.
screen.2.title=<html><center>Step 2 of 4.<br>Please choose the file you wish to upload.</center></html>
screen.2.backButton.text=Back
screen.2.backButton.image=/images/nuvola/32x32/actions/back.png
screen.2.backButton.tooltip=Back
screen.2.dragDropPrompt=<html><center>Drag and drop a file anywhere in this window, or use the Browse button below to select a file<br><br>You may upload ${maxFileCount} file(s) at a time<br><br>The maximum file upload size allowed is <b>${maxFileSize}</b> MBytes<br></center></html>
screen.2.browseButton.text=Choose file
screen.2.browseButton.image=/images/nuvola/32x32/filesystems/folder_blue.png
screen.2.browseButton.tooltip=Choose a file to upload

## Screen 3 displays information about the files the user is about to upload.
## Screen-specific text items: 
##   fileInformation : Text with information about the file to be uploaded.  
screen.3.title=<html><center>Step 3 of 4.<br>Please confirm the details of the file you have chosen to upload</center></html>
screen.3.nextButton.text=Upload
screen.3.nextButton.image=/images/nuvola/32x32/actions/up.png
screen.3.nextButton.tooltip=Upload the file(s) you have chosen
screen.3.backButton.text=Back
screen.3.backButton.image=/images/nuvola/32x32/actions/back.png
screen.3.backButton.tooltip=Back
screen.3.fileInformation=<html><center>You have chosen to upload the file:<br><b>${fileNameList}</b><br><br>The total upload size is: <b>${filesSize}</b><br><br>To upload the file, click the <b>Upload</b> button<br><br>To choose a different file, click the <b>Back</b> button</center></html>

## Screen 4 displays the upload progress information.
## Screen-specific text items:
##   connectingMessage : Message displayed while uploaded makes initial connection to S3
##   hashingMessage : Message displayed while uploaded hashes the upload file. 
##   fileInformation : Text with information about the file being uploaded.
##   cancelButton.text : Text to display in the Cancel upload button.
screen.4.title=<html><center>Step 4 of 4.<br>Uploading file to server</center></html>
screen.4.connectingMessage=<html><center>Connecting to the server<br><br>Please wait</center></html>
screen.4.hashingMessage=<html><center>Generating MD5 hash of file(s)<br><br>Please be patient, this may take several minutes for large files</center></html>
screen.4.fileInformation=<html>Uploading <b>${fileNameList}</b>, total size : <b>${filesSize}</b></html>
screen.4.cancelButton.text=Cancel upload
screen.4.cancelButton.image=/images/nuvola/32x32/actions/cancel.png
screen.4.cancelButton.tooltip=Cancels the current upload

## Screen 5 displays a thankyou message after a successful upload, or an error message if something has gone wrong.
## Screen-specific text items: 
##   thankyouMessage : Thankyou message to display when the upload completes successfully.
##   errorMessage : Error message to display if/when an error occurs.  
screen.5.title=<html><center>Finished</center></html>
screen.5.thankyouMessage=<html><center>Your file has been uploaded to S3<br><br>File uploaded:<br><b>${fileNameList}</b></center></html>
screen.5.errorMessage=<html><center>Sorry, an error occurred: ${errorCode}.<br><br>Please contact us at <a href="mailto:a@b.c">a@b.c</a> for help</center></html>

